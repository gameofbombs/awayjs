"use strict";
var RequestAnimationFrame_1 = require("awayjs-core/lib/utils/RequestAnimationFrame");
var Debug_1 = require("awayjs-core/lib/utils/Debug");
var View_1 = require("awayjs-display/lib/View");
var ElementsType_1 = require("awayjs-display/lib/graphics/ElementsType");
var PrimitivePolygonPrefab_1 = require("awayjs-display/lib/prefabs/PrimitivePolygonPrefab");
var PrimitiveConePrefab_1 = require("awayjs-display/lib/prefabs/PrimitiveConePrefab");
var PrimitiveCubePrefab_1 = require("awayjs-display/lib/prefabs/PrimitiveCubePrefab");
var PrimitiveCylinderPrefab_1 = require("awayjs-display/lib/prefabs/PrimitiveCylinderPrefab");
var PrimitivePlanePrefab_1 = require("awayjs-display/lib/prefabs/PrimitivePlanePrefab");
var PrimitiveSpherePrefab_1 = require("awayjs-display/lib/prefabs/PrimitiveSpherePrefab");
var DefaultRenderer_1 = require("awayjs-renderergl/lib/DefaultRenderer");
var WireframePrimitiveTest = (function () {
    function WireframePrimitiveTest() {
        var _this = this;
        this.meshes = new Array();
        this.radius = 400;
        Debug_1.Debug.LOG_PI_ERRORS = false;
        Debug_1.Debug.THROW_ERRORS = false;
        this.view = new View_1.View(new DefaultRenderer_1.DefaultRenderer());
        this.raf = new RequestAnimationFrame_1.RequestAnimationFrame(this.render, this);
        this.view.backgroundColor = 0x222222;
        window.onresize = function (event) { return _this.onResize(event); };
        this.initSpritees();
        this.raf.start();
        this.onResize();
    }
    WireframePrimitiveTest.prototype.initSpritees = function () {
        var primitives = new Array();
        primitives.push(new PrimitivePolygonPrefab_1.PrimitivePolygonPrefab(null, ElementsType_1.ElementsType.LINE));
        primitives.push(new PrimitiveSpherePrefab_1.PrimitiveSpherePrefab(null, ElementsType_1.ElementsType.LINE));
        primitives.push(new PrimitiveSpherePrefab_1.PrimitiveSpherePrefab(null, ElementsType_1.ElementsType.LINE));
        primitives.push(new PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab(null, ElementsType_1.ElementsType.LINE));
        primitives.push(new PrimitivePlanePrefab_1.PrimitivePlanePrefab(null, ElementsType_1.ElementsType.LINE));
        primitives.push(new PrimitiveConePrefab_1.PrimitiveConePrefab(null, ElementsType_1.ElementsType.LINE));
        primitives.push(new PrimitiveCubePrefab_1.PrimitiveCubePrefab(null, ElementsType_1.ElementsType.LINE));
        var mesh;
        for (var c = 0; c < primitives.length; c++) {
            var t = Math.PI * 2 * c / primitives.length;
            mesh = primitives[c].getNewObject();
            mesh.x = Math.cos(t) * this.radius;
            mesh.y = Math.sin(t) * this.radius;
            mesh.z = 0;
            mesh.transform.scaleTo(2, 2, 2);
            this.view.scene.addChild(mesh);
            this.meshes.push(mesh);
        }
    };
    WireframePrimitiveTest.prototype.render = function () {
        if (this.meshes)
            for (var c = 0; c < this.meshes.length; c++)
                this.meshes[c].rotationY += 1;
        this.view.render();
    };
    WireframePrimitiveTest.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this.view.y = 0;
        this.view.x = 0;
        this.view.width = window.innerWidth;
        this.view.height = window.innerHeight;
    };
    return WireframePrimitiveTest;
}());

//# sourceMappingURL=data:application/json;base64,
