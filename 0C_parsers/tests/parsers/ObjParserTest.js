"use strict";
var AssetEvent_1 = require("awayjs-core/lib/events/AssetEvent");
var LoaderEvent_1 = require("awayjs-core/lib/events/LoaderEvent");
var AssetLibrary_1 = require("awayjs-core/lib/library/AssetLibrary");
var URLRequest_1 = require("awayjs-core/lib/net/URLRequest");
var Debug_1 = require("awayjs-core/lib/utils/Debug");
var RequestAnimationFrame_1 = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View_1 = require("awayjs-display/lib/View");
var DefaultRenderer_1 = require("awayjs-renderergl/lib/DefaultRenderer");
var OBJParser_1 = require("awayjs-parsers/lib/OBJParser");
/**
 *
 */
var ObjParserTest = (function () {
    function ObjParserTest() {
        var _this = this;
        Debug_1.Debug.LOG_PI_ERRORS = true;
        Debug_1.Debug.THROW_ERRORS = false;
        AssetLibrary_1.AssetLibrary.enableParser(OBJParser_1.OBJParser);
        var session = AssetLibrary_1.AssetLibrary.getLoader();
        session.addEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, function (event) { return _this.onLoadComplete(event); });
        session.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, function (event) { return _this.onAssetComplete(event); });
        session.load(new URLRequest_1.URLRequest('assets/t800.obj'));
        this._view = new View_1.View(new DefaultRenderer_1.DefaultRenderer());
        this._timer = new RequestAnimationFrame_1.RequestAnimationFrame(this.render, this);
        window.onresize = function (event) { return _this.resize(event); };
        this._timer.start();
        this.resize();
    }
    ObjParserTest.prototype.resize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    ObjParserTest.prototype.render = function (dt) {
        if (this._t800)
            this._t800.rotationY += 1;
        this._view.render();
    };
    ObjParserTest.prototype.onAssetComplete = function (event) {
        console.log('------------------------------------------------------------------------------');
        console.log('events.AssetEvent.ASSET_COMPLETE', AssetLibrary_1.AssetLibrary.getAsset(event.asset.name));
        console.log('------------------------------------------------------------------------------');
    };
    ObjParserTest.prototype.onLoadComplete = function (event) {
        console.log('------------------------------------------------------------------------------');
        console.log('events.LoaderEvent.RESOURCE_COMPLETE', event);
        console.log('------------------------------------------------------------------------------');
        console.log(AssetLibrary_1.AssetLibrary.getAsset('Mesh_g0'));
        this._t800 = AssetLibrary_1.AssetLibrary.getAsset('Mesh_g0');
        this._t800.y = -200;
        this._t800.transform.scaleTo(4, 4, 4);
        this._view.scene.addChild(this._t800);
    };
    return ObjParserTest;
}());

//# sourceMappingURL=data:application/json;base64,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QWdGLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRU0sc0NBQWMsR0FBckIsVUFBc0IsS0FBaUI7UUFFdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnRkFBZ0YsQ0FBQyxDQUFDO1FBQzlGLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnRkFBZ0YsQ0FBQyxDQUFDO1FBRTlGLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQVksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUU5QyxJQUFJLENBQUMsS0FBSyxHQUFZLDJCQUFZLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXRDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUNGLG9CQUFDO0FBQUQsQ0FoRUEsQUFnRUMsSUFBQSIsImZpbGUiOiJwYXJzZXJzL09ialBhcnNlclRlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Fzc2V0RXZlbnR9XHRcdFx0XHRcdGZyb20gXCJhd2F5anMtY29yZS9saWIvZXZlbnRzL0Fzc2V0RXZlbnRcIjtcbmltcG9ydCB7TG9hZGVyRXZlbnR9XHRcdFx0XHRcdGZyb20gXCJhd2F5anMtY29yZS9saWIvZXZlbnRzL0xvYWRlckV2ZW50XCI7XG5pbXBvcnQge0Fzc2V0TGlicmFyeX1cdFx0XHRcdFx0ZnJvbSBcImF3YXlqcy1jb3JlL2xpYi9saWJyYXJ5L0Fzc2V0TGlicmFyeVwiO1xuaW1wb3J0IHtMb2FkZXJ9XHRcdFx0XHRcdFx0ZnJvbSBcImF3YXlqcy1jb3JlL2xpYi9saWJyYXJ5L0xvYWRlclwiO1xuaW1wb3J0IHtVUkxSZXF1ZXN0fVx0XHRcdFx0XHRmcm9tIFwiYXdheWpzLWNvcmUvbGliL25ldC9VUkxSZXF1ZXN0XCI7XG5pbXBvcnQge0RlYnVnfVx0XHRcdFx0XHRcdGZyb20gXCJhd2F5anMtY29yZS9saWIvdXRpbHMvRGVidWdcIjtcbmltcG9ydCB7UmVxdWVzdEFuaW1hdGlvbkZyYW1lfVx0XHRmcm9tIFwiYXdheWpzLWNvcmUvbGliL3V0aWxzL1JlcXVlc3RBbmltYXRpb25GcmFtZVwiO1xuXG5pbXBvcnQge1ZpZXd9XHRcdFx0XHRcdFx0XHRmcm9tIFwiYXdheWpzLWRpc3BsYXkvbGliL1ZpZXdcIjtcbmltcG9ydCB7U3ByaXRlfVx0XHRcdFx0XHRcdGZyb20gXCJhd2F5anMtZGlzcGxheS9saWIvZGlzcGxheS9TcHJpdGVcIjtcblxuaW1wb3J0IHtEZWZhdWx0UmVuZGVyZXJ9XHRcdFx0XHRmcm9tIFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL0RlZmF1bHRSZW5kZXJlclwiO1xuXG5pbXBvcnQge09CSlBhcnNlcn1cdFx0XHRcdFx0ZnJvbSBcImF3YXlqcy1wYXJzZXJzL2xpYi9PQkpQYXJzZXJcIjtcblxuLyoqXG4gKlxuICovXG5jbGFzcyBPYmpQYXJzZXJUZXN0XG57XG5cdHByaXZhdGUgX3ZpZXc6Vmlldztcblx0cHJpdmF0ZSBfdGltZXI6UmVxdWVzdEFuaW1hdGlvbkZyYW1lO1xuXHRwcml2YXRlIF90ODAwOlNwcml0ZTtcblxuXHRjb25zdHJ1Y3RvcigpXG5cdHtcblx0XHREZWJ1Zy5MT0dfUElfRVJST1JTID0gdHJ1ZTtcblx0XHREZWJ1Zy5USFJPV19FUlJPUlMgPSBmYWxzZTtcblxuXHRcdEFzc2V0TGlicmFyeS5lbmFibGVQYXJzZXIoT0JKUGFyc2VyKSA7XG5cblx0XHR2YXIgc2Vzc2lvbjpMb2FkZXIgPSBBc3NldExpYnJhcnkuZ2V0TG9hZGVyKCk7XG5cdFx0c2Vzc2lvbi5hZGRFdmVudExpc3RlbmVyKExvYWRlckV2ZW50LkxPQURfQ09NUExFVEUsIChldmVudDpMb2FkZXJFdmVudCkgPT4gdGhpcy5vbkxvYWRDb21wbGV0ZShldmVudCkpO1xuXHRcdHNlc3Npb24uYWRkRXZlbnRMaXN0ZW5lcihBc3NldEV2ZW50LkFTU0VUX0NPTVBMRVRFLCAoZXZlbnQ6QXNzZXRFdmVudCkgPT4gdGhpcy5vbkFzc2V0Q29tcGxldGUoZXZlbnQpKTtcblx0XHRzZXNzaW9uLmxvYWQobmV3IFVSTFJlcXVlc3QoJ2Fzc2V0cy90ODAwLm9iaicpKTtcblxuXHRcdHRoaXMuX3ZpZXcgPSBuZXcgVmlldyhuZXcgRGVmYXVsdFJlbmRlcmVyKCkpO1xuXHRcdHRoaXMuX3RpbWVyID0gbmV3IFJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnJlbmRlciwgdGhpcyk7XG5cblx0XHR3aW5kb3cub25yZXNpemUgPSAoZXZlbnQ6VUlFdmVudCkgPT4gdGhpcy5yZXNpemUoZXZlbnQpO1xuXG5cdFx0dGhpcy5fdGltZXIuc3RhcnQoKTtcblx0XHR0aGlzLnJlc2l6ZSgpO1xuXHR9XG5cblx0cHJpdmF0ZSByZXNpemUoZXZlbnQ6VUlFdmVudCA9IG51bGwpXG5cdHtcblx0XHR0aGlzLl92aWV3LnkgPSAwO1xuXHRcdHRoaXMuX3ZpZXcueCA9IDA7XG5cdFx0dGhpcy5fdmlldy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXHRcdHRoaXMuX3ZpZXcuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuXHR9XG5cblx0cHJpdmF0ZSByZW5kZXIoZHQ6bnVtYmVyKSAvL2FuaW1hdGUgYmFzZWQgb24gZHQgZm9yIGZpcmVmb3hcblx0e1xuXHRcdGlmICh0aGlzLl90ODAwKVxuXHRcdFx0dGhpcy5fdDgwMC5yb3RhdGlvblkgKz0gMTtcblxuXHRcdHRoaXMuX3ZpZXcucmVuZGVyKCk7XG5cdH1cblxuXHRwdWJsaWMgb25Bc3NldENvbXBsZXRlKGV2ZW50OkFzc2V0RXZlbnQpXG5cdHtcblx0XHRjb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XG5cdFx0Y29uc29sZS5sb2coJ2V2ZW50cy5Bc3NldEV2ZW50LkFTU0VUX0NPTVBMRVRFJywgQXNzZXRMaWJyYXJ5LmdldEFzc2V0KGV2ZW50LmFzc2V0Lm5hbWUpKTtcblx0XHRjb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XG5cdH1cblxuXHRwdWJsaWMgb25Mb2FkQ29tcGxldGUoZXZlbnQ6TG9hZGVyRXZlbnQpXG5cdHtcblx0XHRjb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XG5cdFx0Y29uc29sZS5sb2coJ2V2ZW50cy5Mb2FkZXJFdmVudC5SRVNPVVJDRV9DT01QTEVURScsIGV2ZW50KTtcblx0XHRjb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XG5cblx0XHRjb25zb2xlLmxvZyhBc3NldExpYnJhcnkuZ2V0QXNzZXQoJ01lc2hfZzAnKSk7XG5cblx0XHR0aGlzLl90ODAwID0gPFNwcml0ZT4gQXNzZXRMaWJyYXJ5LmdldEFzc2V0KCdNZXNoX2cwJyk7XG5cdFx0dGhpcy5fdDgwMC55ID0gLTIwMDtcblx0XHR0aGlzLl90ODAwLnRyYW5zZm9ybS5zY2FsZVRvKDQsIDQsIDQpO1xuXG5cdFx0dGhpcy5fdmlldy5zY2VuZS5hZGRDaGlsZCh0aGlzLl90ODAwKTtcblx0fVxufSJdLCJzb3VyY2VSb290IjoiLi90ZXN0cyJ9
